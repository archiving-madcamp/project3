[{"/home/ubuntu/project3/meme/src/index.js":"1","/home/ubuntu/project3/meme/src/App.js":"2","/home/ubuntu/project3/meme/src/reportWebVitals.js":"3","/home/ubuntu/project3/meme/src/components/Navbar/index.js":"4","/home/ubuntu/project3/meme/src/components/Navbar/NavbarElements.js":"5","/home/ubuntu/project3/meme/src/pages/index.js":"6","/home/ubuntu/project3/meme/src/pages/about.js":"7","/home/ubuntu/project3/meme/src/pages/contact-us.js":"8","/home/ubuntu/project3/meme/src/pages/sign-up.js":"9","/home/ubuntu/project3/meme/src/pages/service.js":"10","/home/ubuntu/project3/meme/src/pages/detail.js":"11","/home/ubuntu/project3/meme/src/pages/DemoControl.js":"12","/home/ubuntu/project3/meme/src/pages/Card.jsx":"13"},{"size":196,"mtime":1610866240731,"results":"14","hashOfConfig":"15"},{"size":782,"mtime":1610816207406,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610708105222,"results":"17","hashOfConfig":"15"},{"size":1278,"mtime":1610867097272,"results":"18","hashOfConfig":"15"},{"size":1615,"mtime":1610719594056,"results":"19","hashOfConfig":"15"},{"size":287,"mtime":1610719219449,"results":"20","hashOfConfig":"15"},{"size":3131,"mtime":1610782827145,"results":"21","hashOfConfig":"15"},{"size":969,"mtime":1610897725048,"results":"22","hashOfConfig":"15"},{"size":294,"mtime":1610719030809,"results":"23","hashOfConfig":"15"},{"size":1964,"mtime":1610893007169,"results":"24","hashOfConfig":"15"},{"size":3612,"mtime":1610817728969,"results":"25","hashOfConfig":"15"},{"size":0,"mtime":1610892124674,"results":"26","hashOfConfig":"15"},{"size":1436,"mtime":1610900885779,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cq3d2c",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/project3/meme/src/index.js",[],["59","60"],"/home/ubuntu/project3/meme/src/App.js",[],"/home/ubuntu/project3/meme/src/reportWebVitals.js",[],"/home/ubuntu/project3/meme/src/components/Navbar/index.js",["61"],"import React from 'react'\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink} from './NavbarElements'\nimport Typography from \"@material-ui/core/Typography\"\nimport mypic from '../../meme-img.png'\n/*\nimport { withStyles } from \"@material-ui/core\"\n\nconst MemeTypography = withStyles({\n    root: {\n        color: \"#FB5135\"\n    }\n})\n*/\nconst Navbar = () => {\n    return (\n        <div>\n            <Nav>\n                <NavLink to=\"/\">\n                    <img src={mypic} height=\"30dp\" width= \"80px\" alt=\"Test\"/>\n                </NavLink>\n                <Bars />\n                <NavMenu>\n                    <NavLink to=\"/about\" activeStyle>\n                        About\n                    </NavLink>\n                    <NavLink to=\"/services\" activeStyle>\n                        Services\n                    </NavLink>\n                    <NavLink to=\"/contact-us\" activeStyle>\n                        Contact us\n                    </NavLink>\n                    <NavLink to=\"/sign-up\" activeStyle>\n                        Sign Up\n                    </NavLink>\n                </NavMenu>\n                <NavBtn>\n                <NavBtnLink to=\"/signin\">Sign in</NavBtnLink>\n                </NavBtn>\n            </Nav>\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/ubuntu/project3/meme/src/components/Navbar/NavbarElements.js",[],"/home/ubuntu/project3/meme/src/pages/index.js",[],"/home/ubuntu/project3/meme/src/pages/about.js",["62","63","64"],"import React, { useMemo, useEffect, useState } from 'react'\nimport ReactDom from \"react-dom\"\nimport { useDropzone } from \"react-dropzone\"\n\nconst baseStyle = {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: \"#eeeeee\",\n    borderStyle: \"dashed\",\n    backgroundColor: \"#fafafa\",\n    color: \"#bdbdbd\",\n    outline: \"none\",\n    transition: \"border .24s ease-in-out\"\n}\n\nconst activeStyle={\n    borderColor: \"#2196f3\"\n}\n\nconst acceptStyle = {\n    borderColor: \"#00e676\"\n  };\n  \n  const rejectStyle = {\n    borderColor: \"#ff1744\"\n  };\n  \n  const thumbsContainer = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 16\n  };\n  \n  const thumb = {\n    display: \"inline-flex\",\n    borderRadius: 2,\n    border: \"1px solid #eaeaea\",\n    marginBottom: 8,\n    marginRight: 8,\n    width: \"auto\",\n    height: 200,\n    padding: 4,\n    boxSizing: \"border-box\"\n  };\n  \n  const thumbInner = {\n    display: \"flex\",\n    minWidth: 0,\n    overflow: \"hidden\"\n  };\n  \n  const img = {\n    display: \"block\",\n    width: \"auto\",\n    height: \"100%\"\n  };\n\nfunction About(props){\n    const [files, setFiles] = useState([])\n    const{\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject,\n        acceptedFiles,\n        open\n    } = useDropzone({\n        accept: \"image/*\",\n        noClick: true,\n        noKeyboard: true,\n        onDrop: acceptedFiles => {\n            setFiles(\n                acceptedFiles.map(file =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file)\n                    }))\n            )\n        }\n\n    })\n\n    const style = useMemo(\n        () => ({\n          ...baseStyle,\n          ...(isDragActive ? activeStyle : {}),\n          ...(isDragAccept ? acceptStyle : {}),\n          ...(isDragReject ? rejectStyle : {})\n        }),\n        [isDragActive, isDragReject]\n      );\n    \n      const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n          <div style={thumbInner}>\n            <img src={file.preview} style={img} />\n          </div>\n        </div>\n      ));\n    \n      useEffect(\n        () => () => {\n          // Make sure to revoke the data uris to avoid memory leaks\n          files.forEach(file => URL.revokeObjectURL(file.preview));\n        },\n        [files]\n      );\n    \n      const filepath = acceptedFiles.map(file => (\n        <li key={file.path}>\n          {file.path} - {file.size} bytes\n        </li>\n      ));\n    \n      return (\n        <div className=\"container\">\n          <div {...getRootProps({ style })}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here</p>\n            <button type=\"button\" onClick={open}>\n              Open File Dialog\n            </button>\n          </div>\n          <aside>\n            <h4>Files</h4>\n            <ul>{filepath}</ul>\n          </aside>\n          <aside style={thumbsContainer}>{thumbs}</aside>\n        </div>\n      );\n    }\n\n\nexport default About\n","/home/ubuntu/project3/meme/src/pages/contact-us.js",[],"/home/ubuntu/project3/meme/src/pages/sign-up.js",[],"/home/ubuntu/project3/meme/src/pages/service.js",["65","66","67"],"import React, { Component } from 'react'\nimport StackGrid, {transitions, easings} from 'react-stack-grid'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport styles from '../App.css'\n\nconst { scaleDown } = transitions;\n\n\nfunction Image({ id, image, mood }) {\n    return (\n        <Link\n        to={{\n            pathname: `/service/${id}`,\n            state: {\n                id: id,\n                image: image,\n                mood: mood\n            }\n        }}\n        >\n        \n            <div className={styles.pic}>\n                <h2>testing:{id}</h2>\n                <h4>mood:{mood}</h4>\n                <img src={image} alt=\"test\" />\n            </div>\n        </Link>\n    )\n}\n\nImage.propTypes = {\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    mood: PropTypes.string.isRequired\n}\n\nclass Service extends Component {\n    render(){\n        return (\n            <Link to={{\n//                pathname: `/service/${id}`\n            }}>\n                <StackGrid columnWidth=\"25%\">\n                    //ex : 각각의 item\n                {Example.map(ex => \n                    <Image \n                    key={ex.image} \n                    image={ex.image} \n                    id={ex.id} mood={ex.mood} ></Image>    \n                )}\n            </StackGrid>\n\n            </Link>\n        )\n    }\n}\n\nconst Example = [\n    {\n        id: \"1\",\n        image: \"https://c5.staticflickr.com/9/8768/28941110956_b05ab588c1_b.jpg\",\n        mood: \"happy\"\n    },\n    {\n        id: \"2\",\n        image: \"https://c3.staticflickr.com/9/8583/28354353794_9f2d08d8c0_b.jpg\",\n        mood: \"sad\"\n    },\n    {\n        id: \"3\",\n        image: \"https://c7.staticflickr.com/9/8569/28941134686_d57273d933_b.jpg\",\n        mood: \"soso\"\n    },\n    {\n        id: \"4\",\n        image: \"https://c6.staticflickr.com/9/8520/28357073053_cafcb3da6f_b.jpg\",\n        mood: \"bad\"\n    }\n    \n    \n]\n\nexport default Service","/home/ubuntu/project3/meme/src/pages/detail.js",["68","69","70"],"import React, { useMemo, useEffect, useState } from 'react'\nimport ReactDom from \"react-dom\"\nimport { useDropzone } from \"react-dropzone\"\n/*\nclass Detail extends React.Component{\n    componentDidMount(){\n        const { location, history } = this.props\n\n        if(location.state === undefined){\n            history.push(\"/\")\n        }\n    }\n\n    render(){\n        const { location } = this.props\n\n        if(location.state){\n            return (\n            <div>\n            <span>{location.state.mood}</span>\n            </div>\n            )\n        }else{\n            return null\n        }\n\n        \n    }\n}\n*/\n\nconst baseStyle = {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: \"#eeeeee\",\n    borderStyle: \"dashed\",\n    backgroundColor: \"#fafafa\",\n    color: \"#bdbdbd\",\n    outline: \"none\",\n    transition: \"border .24s ease-in-out\"\n}\n\nconst activeStyle={\n    borderColor: \"#2196f3\"\n}\n\nconst acceptStyle = {\n    borderColor: \"#00e676\"\n  };\n  \n  const rejectStyle = {\n    borderColor: \"#ff1744\"\n  };\n  \n  const thumbsContainer = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 16\n  };\n  \n  const thumb = {\n    display: \"inline-flex\",\n    borderRadius: 2,\n    border: \"1px solid #eaeaea\",\n    marginBottom: 8,\n    marginRight: 8,\n    width: \"auto\",\n    height: 200,\n    padding: 4,\n    boxSizing: \"border-box\"\n  };\n  \n  const thumbInner = {\n    display: \"flex\",\n    minWidth: 0,\n    overflow: \"hidden\"\n  };\n  \n  const img = {\n    display: \"block\",\n    width: \"auto\",\n    height: \"100%\"\n  };\n\nfunction Detail(props){\n    const [files, setFiles] = useState([])\n    const{\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject,\n        acceptedFiles,\n        open\n    } = useDropzone({\n        accept: \"image/*\",\n        noClick: true,\n        noKeyboard: true,\n        onDrop: acceptedFiles => {\n            setFiles(\n                acceptedFiles.map(file =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file)\n                    }))\n            )\n        }\n\n    })\n\n    const style = useMemo(\n        () => ({\n          ...baseStyle,\n          ...(isDragActive ? activeStyle : {}),\n          ...(isDragAccept ? acceptStyle : {}),\n          ...(isDragReject ? rejectStyle : {})\n        }),\n        [isDragActive, isDragReject]\n      );\n    \n      const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n          <div style={thumbInner}>\n            <img src={file.preview} style={img} />\n          </div>\n        </div>\n      ));\n    \n      useEffect(\n        () => () => {\n          // Make sure to revoke the data uris to avoid memory leaks\n          files.forEach(file => URL.revokeObjectURL(file.preview));\n        },\n        [files]\n      );\n    \n      const filepath = acceptedFiles.map(file => (\n        <li key={file.path}>\n          {file.path} - {file.size} bytes\n        </li>\n      ));\n    \n      return (\n        <div className=\"container\">\n          <div {...getRootProps({ style })}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here</p>\n            <button type=\"button\" onClick={open}>\n              Open File Dialog\n            </button>\n          </div>\n          <aside>\n            <h4>Files</h4>\n            <ul>{filepath}</ul>\n          </aside>\n          <aside style={thumbsContainer}>{thumbs}</aside>\n        </div>\n      );\n    }\n\n\n\n\n\nexport default Detail","/home/ubuntu/project3/meme/src/pages/DemoControl.js",[],"/home/ubuntu/project3/meme/src/pages/Card.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":96,"column":9,"nodeType":"82","endLine":96,"endColumn":37,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":102,"column":13,"nodeType":"86","endLine":102,"endColumn":51},{"ruleId":"75","severity":1,"message":"87","line":2,"column":33,"nodeType":"77","messageId":"78","endLine":2,"endColumn":40},{"ruleId":"75","severity":1,"message":"88","line":7,"column":9,"nodeType":"77","messageId":"78","endLine":7,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":44,"column":46,"nodeType":"91","endLine":46,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":123,"column":9,"nodeType":"82","endLine":123,"endColumn":37,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"85","line":129,"column":13,"nodeType":"86","endLine":129,"endColumn":51},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'ReactDom' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'isDragAccept'. Either include it or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'easings' is defined but never used.","'scaleDown' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [isDragAccept, isDragActive, isDragReject]",{"range":"100","text":"101"},{"range":"102","text":"101"},[1987,2015],"[isDragAccept, isDragActive, isDragReject]",[2465,2493]]