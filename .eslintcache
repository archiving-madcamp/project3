[{"/home/ubuntu/project3/meme/src/index.js":"1","/home/ubuntu/project3/meme/src/App.js":"2","/home/ubuntu/project3/meme/src/reportWebVitals.js":"3","/home/ubuntu/project3/meme/src/components/Navbar/index.js":"4","/home/ubuntu/project3/meme/src/components/Navbar/NavbarElements.js":"5","/home/ubuntu/project3/meme/src/pages/index.js":"6","/home/ubuntu/project3/meme/src/pages/sign-up.js":"7","/home/ubuntu/project3/meme/src/pages/detail.js":"8","/home/ubuntu/project3/meme/src/pages/DemoControl.js":"9","/home/ubuntu/project3/meme/src/pages/Card.jsx":"10","/home/ubuntu/project3/meme/src/pages/homedetail.js":"11","/home/ubuntu/project3/meme/src/pages/about.js":"12","/home/ubuntu/project3/meme/src/pages/contact-us.js":"13","/home/ubuntu/project3/meme/src/pages/service.js":"14"},{"size":228,"mtime":1610978024069,"results":"15","hashOfConfig":"16"},{"size":879,"mtime":1611030157038,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610708105222,"results":"18","hashOfConfig":"16"},{"size":1577,"mtime":1611030411468,"results":"19","hashOfConfig":"16"},{"size":1615,"mtime":1610719594056,"results":"20","hashOfConfig":"16"},{"size":334,"mtime":1611030731917,"results":"21","hashOfConfig":"16"},{"size":363,"mtime":1611030690331,"results":"22","hashOfConfig":"16"},{"size":5020,"mtime":1611030157042,"results":"23","hashOfConfig":"16"},{"size":0,"mtime":1610892124674,"results":"24","hashOfConfig":"16"},{"size":2920,"mtime":1611030157042,"results":"25","hashOfConfig":"16"},{"size":79,"mtime":1611030820664,"results":"26","hashOfConfig":"16"},{"size":2130,"mtime":1611030411468,"results":"27","hashOfConfig":"16"},{"size":5238,"mtime":1611031238913,"results":"28","hashOfConfig":"16"},{"size":694,"mtime":1611030777546,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"cq3d2c",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/project3/meme/src/index.js",[],["62","63"],"/home/ubuntu/project3/meme/src/App.js",[],"/home/ubuntu/project3/meme/src/reportWebVitals.js",[],"/home/ubuntu/project3/meme/src/components/Navbar/index.js",["64","65"],"import React from 'react'\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink} from './NavbarElements'\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport mypic from '../../meme-img.png'\n/*\nimport { withStyles } from \"@material-ui/core\"\n\nconst MemeTypography = withStyles({\n    root: {\n        color: \"#FB5135\"\n    }\n})\n*/\n\nconst useStyles = makeStyles({\n    navfont: {\n        fontFamily: 'Spoqa Han Sans Neo',\n        fontSize: '15px'\n    }\n})\n\nconst Navbar = () => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Nav>\n                <NavLink to=\"/\" style={{marginTop: '3px'}}>\n                    <img src={mypic} height=\"30dp\" width= \"80px\" alt=\"Test\"/>\n                </NavLink>\n                <Bars />\n                <NavMenu>\n                    <NavLink to=\"/about\" className={classes.navfont} style={{marginTop: '15px'}} activeStyle >\n                        Step by Step\n                    </NavLink>\n                    <NavLink to=\"/services\" className={classes.navfont} style={{marginTop: '15px'}} activeStyle>\n                        Change to\n                    </NavLink>\n                    <NavLink to=\"/contact-us\" className={classes.navfont } style={{marginTop: '15px'}} activeStyle>\n                        Beta\n                    </NavLink>\n                    <NavLink to=\"/sign-up\" className={classes.navfont} style={{marginTop: '15px'}} activeStyle>\n                        Sign Up\n                    </NavLink>\n                </NavMenu>\n\n            </Nav>\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/ubuntu/project3/meme/src/components/Navbar/NavbarElements.js",[],"/home/ubuntu/project3/meme/src/pages/index.js",["66","67","68","69","70"],"/home/ubuntu/project3/meme/src/pages/sign-up.js",[],"/home/ubuntu/project3/meme/src/pages/detail.js",["71","72","73","74","75","76","77","78","79"],"import React, { useMemo, useEffect, useState } from 'react'\nimport ReactDom from \"react-dom\"\nimport { useDropzone } from \"react-dropzone\"\n\nconst baseStyle = {\n    width: '100%',\n    height: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: \"#eeeeee\",\n    borderStyle: \"dashed\",\n    backgroundColor: \"#fafafa\",\n    color: \"#bdbdbd\",\n    outline: \"none\",\n    transition: \"border .24s ease-in-out\",\n    textAlign: \"center\"\n}\n\nconst activeStyle={\n    borderColor: \"#2196f3\"\n}\n\nconst acceptStyle = {\n    borderColor: \"#00e676\"\n  };\n  \n  const rejectStyle = {\n    borderColor: \"#ff1744\"\n  };\n  \n  const thumbsContainer = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 16\n  };\n  \n  const thumb = {\n//    display: \"inline-flex\",\n    width: '100%',\n    height: \"300px\",\n    borderRadius: 2,\n    border: \"1px solid #eaeaea\",\n    marginBottom: 8,\n    marginRight: 8,\n    width: 400,\n    height: 200,\n    padding: 4,\n    boxSizing: \"border-box\"\n  };\n  \n  const thumbInner = {\n    display: \"flex\",\n    minWidth: 0,\n    overflow: \"hidden\"\n  };\n  \n  const img = {\n    display: \"block\",\n    width: \"auto\",\n    height: \"100%\"\n  };\n\nfunction Detail(props){\n    const [files, setFiles] = useState([])\n    const [isLoad, setLoads] = useState(false)\n    const{\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject,\n        acceptedFiles,\n        open\n    } = useDropzone({\n        accept: \"image/*\",\n        noClick: true,\n        noKeyboard: true,\n        onDrop: acceptedFiles => {\n          setLoads(true)\n            setFiles(   \n                acceptedFiles.map(file =>\n                    Object.assign(file, {\n                        preview: URL.createObjectURL(file)\n                    }))\n            )\n        }\n\n    })\n\n    const style = useMemo(\n        () => ({\n          ...baseStyle,\n          ...(isDragActive ? activeStyle : {}),\n          ...(isDragAccept ? acceptStyle : {}),\n          ...(isDragReject ? rejectStyle : {})\n        }),\n        [isDragActive, isDragReject]\n      );\n    \n      const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n          <div style={thumbInner}>\n            <img src={file.preview} style={img} />\n          </div>\n        </div>\n      ));\n    \n      useEffect(\n        () => () => {\n          // Make sure to revoke the data uris to avoid memory leaks\n          files.forEach(file => URL.revokeObjectURL(file.preview));\n        },\n        [files]\n        [isLoad]\n        \n      );\n    \n      const filepath = acceptedFiles.map(file => (\n        <li key={file.path}>\n          {file.path} - {file.size} bytes\n        </li>\n      ));\n    \n      return (\n        <div className=\"container\">\n\n          <div style={{\n            float:'left',\n            padding:'3%',\n            marginLeft:'7%',\n            marginRight:'7%',\n            marginTop:'7%',\n            marginBottom:'1%',\n            width:'30%',\n            height:'400px',\n            backgroundColor:'powderblue',\n            fontSize: '24px'\n          }}>\n            {/* <p style={{textAlign:\"center\"}}><strong>이미지를 넣으세요 ^o^</strong></p> */}\n\n            {isLoad ? (\n              <div>{thumbs}</div>\n            ):(<div {...getRootProps({ style })}>\n              <input {...getInputProps()} />\n              <p>Drag 'n' drop some files here</p>\n              <button type=\"button\" onClick={open}>\n                Open File Dialog\n              </button>\n            </div>)}\n            \n            \n\n          </div>\n\n          <div style={{\n            float:'left',\n            padding:'3%',\n            marginLeft:'7%',\n            marginRight:'7%',\n            marginTop:'7%',\n            marginBottom:'1%',\n            width:'30%',\n            height:'400px',\n            backgroundColor:'aliceblue'\n          }}>\n            <p>tlqkf2</p>\n          </div>\n\n          <div style={{\n            float:'left',\n            marginLeft:'7%',\n            marginRight:'7%',\n            width:'36%',\n            fontSize: '24px',\n          }}>\n            <button style={{\n              float:'right',\n              padding:\"10px\"\n            }} type=\"button\" onClick={open}>\n              Transfer\n            </button>\n          </div>\n\n          <div style={{\n            float:'left',\n            marginLeft:'7%',\n            marginRight:'7%',\n            width:'36%',\n            fontSize: '24px',\n          }}>\n            <button style={{\n              float:'right',\n              padding:\"10px\"\n            }} type=\"button\">\n              \n            </button>\n          </div>\n\n          <aside >\n            <h4>Files</h4>\n            <ul>{filepath}</ul>\n          </aside>\n\n          \n        </div>\n      )\n    }\n\n\nexport default Detail\n\n{/* <aside >\n            <h4>Files</h4>\n            <ul>{filepath}</ul>\n          </aside>\n          <aside style={thumbsContainer}>{thumbs}</aside> */}\n","/home/ubuntu/project3/meme/src/pages/DemoControl.js",[],"/home/ubuntu/project3/meme/src/pages/Card.jsx",[],"/home/ubuntu/project3/meme/src/pages/homedetail.js",["80"],"/home/ubuntu/project3/meme/src/pages/about.js",["81","82"],"import React, { Component } from 'react'\nimport StackGrid, {transitions} from 'react-stack-grid'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport sizeMe from 'react-sizeme'\n\n\n\n\nfunction Image({ id, image, mood }) {\n    return (\n        <Link\n        to={{\n            pathname: `/service/${id}`,\n            state: {\n                id: id,\n                image: image,\n                mood: mood\n            }\n        }}\n        >\n        \n            <div>\n                <h2>testing:{id}</h2>\n                <h4>mood:{mood}</h4>\n                <img src={image} alt=\"test\" width=\"400px\" height=\"400px\"/>\n            </div>\n        </Link>\n    )\n}\n\nImage.propTypes = {\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    mood: PropTypes.string.isRequired\n}\n\nclass Service extends Component {\n    render(){\n        //width에 따라 columnWidth를 변경시키기 위함\n        const { \n            size: { \n              width\n            } \n          } = this.props;\n\n        return (\n            <Link to={{\n//                pathname: `/service/${id}`\n            }}>\n                <StackGrid columnWidth={width <= 768 ? '100%' : '25%'}>\n                    //ex : 각각의 item\n                {Example.map(ex => \n                    <Image \n                    key={ex.image} \n                    image={ex.image} \n                    id={ex.id} mood={ex.mood} ></Image>    \n                )}\n            </StackGrid>\n\n            </Link>\n        )\n    }\n}\n\nconst Example = [\n    {\n        id: \"1\",\n        image: \"https://c5.staticflickr.com/9/8768/28941110956_b05ab588c1_b.jpg\",\n        mood: \"happy\"\n    },\n    {\n        id: \"2\",\n        image: \"https://c3.staticflickr.com/9/8583/28354353794_9f2d08d8c0_b.jpg\",\n        mood: \"sad\" \n    },\n    {\n        id: \"3\",\n        image: \"https://c7.staticflickr.com/9/8569/28941134686_d57273d933_b.jpg\",\n        mood: \"soso\"\n    },\n    {\n        id: \"4\",\n        image: \"https://c6.staticflickr.com/9/8520/28357073053_cafcb3da6f_b.jpg\",\n        mood: \"bad\"\n    }\n    \n    \n]\n\nexport default sizeMe()(Service)\n","/home/ubuntu/project3/meme/src/pages/contact-us.js",["83","84","85","86","87","88","89","90"],"/home/ubuntu/project3/meme/src/pages/service.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":38,"nodeType":"97","messageId":"98","endLine":2,"endColumn":44},{"ruleId":"95","severity":1,"message":"99","line":2,"column":46,"nodeType":"97","messageId":"98","endLine":2,"endColumn":56},{"ruleId":"95","severity":1,"message":"100","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":17},{"ruleId":"95","severity":1,"message":"101","line":2,"column":20,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"95","severity":1,"message":"102","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"103","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"95","severity":1,"message":"104","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"105","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"106","line":33,"column":9,"nodeType":"97","messageId":"98","endLine":33,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":48,"column":5,"nodeType":"109","messageId":"110","endLine":48,"endColumn":10},{"ruleId":"107","severity":1,"message":"111","line":49,"column":5,"nodeType":"109","messageId":"110","endLine":49,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":100,"column":9,"nodeType":"114","endLine":100,"endColumn":37,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":106,"column":13,"nodeType":"118","endLine":106,"endColumn":51},{"ruleId":"112","severity":1,"message":"119","line":116,"column":9,"nodeType":"120","endLine":117,"endColumn":17},{"ruleId":"112","severity":1,"message":"121","line":116,"column":9,"nodeType":"120","endLine":117,"endColumn":17,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":215,"column":1,"nodeType":"125","messageId":"126","endLine":219,"endColumn":62},{"ruleId":"95","severity":1,"message":"127","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"101","line":2,"column":20,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":51,"column":72,"nodeType":"130","endLine":53,"endColumn":17},{"ruleId":"95","severity":1,"message":"106","line":32,"column":9,"nodeType":"97","messageId":"98","endLine":32,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":47,"column":5,"nodeType":"109","messageId":"110","endLine":47,"endColumn":10},{"ruleId":"107","severity":1,"message":"111","line":48,"column":5,"nodeType":"109","messageId":"110","endLine":48,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":102,"column":9,"nodeType":"114","endLine":102,"endColumn":37,"suggestions":"131"},{"ruleId":"116","severity":1,"message":"117","line":108,"column":13,"nodeType":"118","endLine":108,"endColumn":51},{"ruleId":"112","severity":1,"message":"119","line":118,"column":9,"nodeType":"120","endLine":119,"endColumn":17},{"ruleId":"112","severity":1,"message":"121","line":118,"column":9,"nodeType":"120","endLine":119,"endColumn":17,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"124","line":223,"column":1,"nodeType":"125","messageId":"126","endLine":227,"endColumn":62},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'NavBtn' is defined but never used.","Identifier","unusedVar","'NavBtnLink' is defined but never used.","'StackGrid' is defined but never used.","'transitions' is defined but never used.","'Link' is defined but never used.","'PropTypes' is defined but never used.","'sizeMe' is defined but never used.","'ReactDom' is defined but never used.","'thumbsContainer' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","Duplicate key 'height'.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'isDragAccept'. Either include it or remove the dependency array.","ArrayExpression",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","MemberExpression","React Hook useEffect has a missing dependency: 'files'. Either include it or remove the dependency array.",["136"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'React' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",["137"],["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"139","fix":"143"},{"desc":"141","fix":"144"},"Update the dependencies array to be: [isDragAccept, isDragActive, isDragReject]",{"range":"145","text":"146"},"Update the dependencies array to be: [files]",{"range":"147","text":"148"},{"range":"149","text":"146"},{"range":"150","text":"148"},[2111,2139],"[isDragAccept, isDragActive, isDragReject]",[2567,2591],"[files]",[2084,2112],[2540,2564]]